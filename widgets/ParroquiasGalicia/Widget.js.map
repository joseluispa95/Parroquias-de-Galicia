{"version":3,"sources":["../../../widgets/ParroquiasGalicia/Widget.js"],"names":["define","declare","BaseWidget","QueryTask","Query","lang","Graphic","SimpleFillSymbol","SimpleLineSymbol","Color","SpatialReference","baseClass","cargaConcellos","codigoProvincia","selectProvincia","value","selectConcellos","innerHTML","queryTask","config","servicioConcellos","query","returnGeometry","outFields","orderByFields","where","execute","hitch","results","opt","document","createElement","text","add","i","features","length","attributes","CODCONC","CONCELLO","cargaParroquias","codigoConcello","selectParroquias","servicioParroquias","results_parr","CODPARRO","PARROQUIA","zoomConcello","queryTaskZoomConcello","queryConcello","outSpatialReference","resultZoomCon","geometriaCon","geometry","polygonSymbol","graphicConcello","map","graphics","setExtent","getExtent","console","log","zoomParroquia","codigoParroquia","queryTaskZoomParroquia","geometriaPar","graphicParroquia"],"mappings":"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","file":"Widget.js","sourcesContent":["define(['dojo/_base/declare', 'jimu/BaseWidget',\r\n\"esri/tasks/QueryTask\",\r\n\"esri/tasks/query\",\r\n'dojo/_base/lang',\r\n\"esri/graphic\",\r\n\"esri/symbols/SimpleFillSymbol\",\r\n\"esri/symbols/SimpleLineSymbol\",\r\n\"esri/Color\",\r\n\"esri/SpatialReference\"],\r\nfunction(declare, BaseWidget,QueryTask,Query,lang,Graphic,SimpleFillSymbol,SimpleLineSymbol,Color, SpatialReference) {\r\n  //To create a widget, you need to derive from BaseWidget.\r\n  return declare([BaseWidget], {\r\n\r\n    // Custom widget code goes here\r\n\r\n    baseClass: 'parroquias-galicia',\r\n    // this property is set by the framework when widget is loaded.\r\n    // name: 'ParroquiasGalicia',\r\n    // add additional properties here\r\n\r\n    cargaConcellos(){\r\n\r\n      // Recogemos el código de provincias seleccionado\r\n      let codigoProvincia = this.selectProvincia.value;\r\n      if(codigoProvincia == -1)return;\r\n\r\n      // Limpiamos el combo de concellos\r\n      this.selectConcellos.innerHTML = \"\";\r\n\r\n      // Cogemos la URL del fichero de configuracion\r\n      const queryTask = new QueryTask(this.config.servicioConcellos);\r\n\r\n      // Establecemos los parametros correctos para ejecutar la consulta\r\n      const query = new Query();\r\n      query.returnGeometry = false;\r\n      query.outFields = [\"CODCONC\",\"CONCELLO\"];\r\n      query.orderByFields = [\"CONCELLO\"];\r\n      query.where = \"CODPROV = \" + codigoProvincia;\r\n      \r\n      // Ejecutamos la consulta\r\n      queryTask.execute(query,lang.hitch(this, function(results){\r\n\r\n        // Creamos la opción por defecto (-1)\r\n        let opt = document.createElement(\"option\");\r\n        opt.value = -1;\r\n        opt.text = \"Seleccione concello\";\r\n        this.selectConcellos.add(opt);\r\n\r\n        // Para cada concello creamos la option correspondiente en el combo según la consulta\r\n        for (let i = 0; i < results.features.length; i++) {\r\n          opt = document.createElement(\"option\");\r\n          opt.value = results.features[i].attributes.CODCONC;\r\n          opt.text = results.features[i].attributes.CONCELLO;\r\n          this.selectConcellos.add(opt);\r\n          \r\n        }\r\n\r\n\r\n      }))\r\n      \r\n    },\r\n\r\n    cargaParroquias(){\r\n      // Recogemos el código de provincias seleccionado\r\n      let codigoConcello = this.selectConcellos.value;\r\n      if(codigoConcello == -1)return;\r\n\r\n      // Limpiamos el combo de concellos\r\n      this.selectParroquias.innerHTML = \"\";\r\n\r\n      // Cogemos la URL del fichero de configuracion\r\n      const queryTask = new QueryTask(this.config.servicioParroquias);\r\n\r\n      // Establecemos los parametros correctos para ejecutar la consulta\r\n      const query = new Query();\r\n      query.returnGeometry = false;\r\n      query.outFields = [\"CODPARRO\",\"PARROQUIA\"];\r\n      query.orderByFields = [\"PARROQUIA\"];\r\n      query.where = \"CODCONC = \" + codigoConcello;\r\n      \r\n      // Ejecutamos la consulta\r\n      queryTask.execute(query,lang.hitch(this, function(results_parr){\r\n\r\n        // Creamos la opción por defecto (-1)\r\n        let opt = document.createElement(\"option\");\r\n        opt.value = -1;\r\n        opt.text = \"Seleccione parroquia\";\r\n        this.selectParroquias.add(opt);\r\n\r\n        // Para cada concello creamos la option correspondiente en el combo según la consulta\r\n        for (let i = 0; i < results_parr.features.length; i++) {\r\n          opt = document.createElement(\"option\");\r\n          opt.value = results_parr.features[i].attributes.CODPARRO;\r\n          opt.text = results_parr.features[i].attributes.PARROQUIA;\r\n          this.selectParroquias.add(opt);\r\n          \r\n        }\r\n      }))\r\n    },\r\n\r\n    zoomConcello(){\r\n\r\n      // Recogemos el código de provincias seleccionado\r\n      let codigoConcello = this.selectConcellos.value;\r\n      if(codigoConcello == -1)return;\r\n\r\n      // Cogemos la URL del fichero de configuracion\r\n      const queryTaskZoomConcello = new QueryTask(this.config.servicioConcellos);\r\n\r\n      // Establecemos los parametros correctos para ejecutar la consulta\r\n      const queryConcello = new Query();\r\n      queryConcello.returnGeometry = true;\r\n      queryConcello.outSpatialReference = new SpatialReference(102100)\r\n      queryConcello.where = \"CODCONC = \" + codigoConcello;\r\n\r\n      // Ejecutamos la consulta\r\n      queryTaskZoomConcello.execute(queryConcello,lang.hitch(this, function(resultZoomCon){ \r\n        \r\n        // Recogemos la geometría \r\n        var geometriaCon = resultZoomCon.features[0].geometry\r\n\r\n        // Damos una simbología\r\n        var polygonSymbol = new SimpleFillSymbol(\r\n          \"solid\",  \r\n          new SimpleLineSymbol(\"solid\", new Color([232,104,80]), 2),\r\n          new Color([232,104,80,0.25])\r\n        );\r\n\r\n        let graphicConcello = new Graphic(geometriaCon,polygonSymbol)\r\n\r\n        this.map.graphics.add(graphicConcello)\r\n        this.map.setExtent(geometriaCon.getExtent(),true)\r\n      }))\r\n\r\n\r\n\r\n      console.log(\"Los has hecho bien\")\r\n    },\r\n\r\n    zoomParroquia(){\r\n      let codigoParroquia = this.selectParroquias.value;\r\n      if(codigoParroquia == -1)return;\r\n\r\n      // Cogemos la URL del fichero de configuracion\r\n      const queryTaskZoomParroquia = new QueryTask(this.config.servicioParroquias);\r\n\r\n      // Establecemos los parametros correctos para ejecutar la consulta\r\n      const queryConcello = new Query();\r\n      queryConcello.returnGeometry = true;\r\n      queryConcello.outSpatialReference = new SpatialReference(102100)\r\n      queryConcello.where = \"CODPARRO = \" + codigoParroquia;\r\n\r\n      // Ejecutamos la consulta\r\n      queryTaskZoomParroquia.execute(queryConcello,lang.hitch(this, function(resultZoomCon){ \r\n        \r\n        // Recogemos la geometría \r\n        var geometriaPar = resultZoomCon.features[0].geometry\r\n\r\n        // Damos una simbología\r\n        var polygonSymbol = new SimpleFillSymbol(\r\n          \"solid\",  \r\n          new SimpleLineSymbol(\"solid\", new Color([232,104,80]), 2),\r\n          new Color([232,104,80,0.25])\r\n        );\r\n\r\n        let graphicParroquia = new Graphic(geometriaPar,polygonSymbol)\r\n\r\n        this.map.graphics.add(graphicParroquia)\r\n        this.map.setExtent(geometriaPar.getExtent(),true)\r\n      }))\r\n    }\r\n\r\n  });\r\n\r\n});\r\n"]}